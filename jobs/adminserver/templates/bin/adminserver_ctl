#!/bin/bash

set -eu

RUN_DIR=/var/vcap/sys/run/adminserver
LOG_DIR=/var/vcap/sys/log/adminserver
TMP_DIR=/var/vcap/sys/tmp/adminserver
STORE_DIR=/var/vcap/store/adminserver
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/adminserver.pid

source /var/vcap/packages/harbor/common/utils.sh

export PATH=/var/vcap/packages/harbor/bin:${PATH}

case $1 in
  start)
    pid_guard ${PIDFILE} "adminserver"
    echo $$ > ${PIDFILE}

    export PORT="<%= p('adminserver.port') %>"
    export KEY_PATH="/var/vcap/jobs/adminserver/config/key"
    export LOG_LEVEL="<%= p('adminserver.log_level') %>"
    export UI_SECRET="<%= link('ui').p('ui.secret') %>"
    export JOBSERVICE_SECRET="<%= link('jobservice').p('jobservice.secret') %>"
    export JSON_CFG_STORE_PATH="${STORE_DIR}/adminserver.json"
    export IMAGE_STORE_PATH="${STORE_DIR}/images"
    mkdir -p "${IMAGE_STORE_PATH}"

    <% if_p('adminserver.external_url') do |external_url| %>
    export EXT_ENDPOINT="<%= external_url %>"
    export REGISTRY_URL="<%= external_url %>"
    <% end.else do %>
    <% if link('nginx').p('ssl_only') %>
    export EXT_ENDPOINT="https://<%= link('nginx').instances.first.address %>:<%= link('nginx').p('https_port') %>"
    export REGISTRY_URL="https://<%= link('nginx').instances.first.address %>:<%= link('nginx').p('https_port') %>"
    <% else %>
    export EXT_ENDPOINT="http://<%= link('nginx').instances.first.address %>:<%= link('nginx').p('http_port') %>"
    export REGISTRY_URL="http://<%= link('nginx').instances.first.address %>:<%= link('nginx').p('http_port') %>"
    <% end %>
    <% end %>
    export AUTH_MODE="<%= p('adminserver.auth_mode') %>"
    export MAX_JOB_WORKERS="<%= p('adminserver.max_job_workers') %>"
    export SELF_REGISTRATION="<%= p('adminserver.self_registration') %>"
    export TOKEN_EXPIRATION="<%= p('adminserver.token_expiration') %>"
    export VERIFY_REMOTE_CERT="<%= p('adminserver.verify_remote_cert') %>"
    export PROJECT_CREATION_RESTRICTION="<%= p('adminserver.project_creation_restriction') %>"
    export HARBOR_ADMIN_PASSWORD="<%= p('adminserver.initial_admin_password') %>"
    <% if_p('admiral.url') do |admiral_url| %>
    export ADMIRAL_URL="<%= admiral_url %>"
    <% end %>
    export WITH_NOTARY="false"
    export WITH_CLAIR="false"
    export RESET="<%= p('adminserver.reset') %>"

    export DATABASE_TYPE=mysql
    export MYSQL_HOST="<%= link('mysql').instances.first.address %>"
    export MYSQL_PORT="<%= p('mysql.port') %>"
    export MYSQL_USR="<%= p('mysql.username') %>"
    export MYSQL_PWD="<%= p('mysql.password') %>"
    export MYSQL_DATABASE="<%= p('mysql.dbname') %>"

    <% if_p('ldap.url') do |ldap_url| %>
    export LDAP_URL="<%= p('ldap_url') %>"
    <% end %>
    <% if_p('ldap.search_dn') do |ldap_search_dn| %>
    export LDAP_SEARCH_DN="<%= ldap_search_dn %>"
    <% end %>
    <% if_p('ldap.search_pwd') do |ldap_search_pwd| %>
    export LDAP_SEARCH_PWD="<%= ldap_search_pwd %>"
    <% end %>
    <% if_p('ldap.base_dn') do |ldap_base_dn| %>
    export LDAP_BASE_DN="<%= ldap_base_dn %>"
    <% end %>
    <% if_p('ldap.filter') do |ldap_filter| %>
    export LDAP_FILTER="<%= ldap_filter %>"
    <% end %>
    <% if_p('ldap.uid') do |ldap_uid| %>
    export LDAP_UID="<%= ldap_uid %>"
    <% end %>
    <% if_p('ldap.scope') do |ldap_scope| %>
    export LDAP_SCOPE="<%= ldap_scope %>"
    <% end %>
    <% if_p('ldap.timeout') do |ldap_timeout| %>
    export LDAP_TIMEOUT="<%= ldap_timeout %>"
    <% end %>

    <% if_p('email.server') do |email_server| %>
    export EMAIL_HOST="<%= email_server %>"
    <% end %>
    <% if_p('email.port') do |email_port| %>
    export EMAIL_PORT="<%= email_port %>"
    <% end %>
    <% if_p('email.username') do |email_username| %>
    export EMAIL_USR="<%= email_username %>"
    <% end %>
    <% if_p('email.password') do |email_password| %>
    export EMAIL_PWD="<%= email_password %>"
    <% end %>
    <% if_p('email.ssl') do |email_ssl| %>
    export EMAIL_SSL="<%= email_ssl %>"
    <% end %>
    <% if_p('email.from') do |email_from| %>
    export EMAIL_FROM="<%= email_from %>"
    <% end %>

    export JOBSERVICE_URL="http://<%= link('jobservice').instances.first.address %>:<%= link('jobservice').p('jobservice.port') %>"
    export UI_URL="http://<%= link('ui').instances.first.address %>:<%= link('ui').p('ui.port') %>"

    <% if_p('uaa.verifycert') do |uaa_verifycert| %>
      export UAA_VERIFY_CERT="<%= uaa_verifycert %>"
    <% end %>
    <% if_p('uaa.endpoint') do |uaa_endpoint| %>
    export UAA_ENDPOINT="<%= uaa_endpoint %>"
    <% end %>
    <% if_p('uaa.client.id') do |uaa_client_id| %>
    export UAA_CLIENTID="<%= uaa_client_id %>"
    <% end %>
    <% if_p('uaa.client.secret') do |uaa_client_secret| %>
    export UAA_CLIENTSECRET="<%= uaa_client_secret %>"
    <% end %>

    exec adminserver \
      >>  ${LOG_DIR}/adminserver.stdout.log \
      2>> ${LOG_DIR}/adminserver.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac

exit 0
